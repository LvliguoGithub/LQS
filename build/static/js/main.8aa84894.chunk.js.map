{"version":3,"sources":["utils/pick-query.js","utils/json-fetch.js","web-api/get-search-data.js","lt-list.js","search-tool.js","App.js","reportWebVitals.js","index.js"],"names":["pickQuery","obj","queryArray","Object","keys","key","value","undefined","push","length","encodeURI","join","JsonFetch","get","url","query","Promise","resolve","reject","fetch","method","then","res","json","data","catch","error","result","getSearchData","a","console","log","LtItem","props","Text","Typography","Link","direction","href","target","item","ltName","type","desc","icon","StarOutlined","WechatOutlined","LtList","useState","paginationData","hideOnSinglePage","defaultPageSize","total","totalElements","pagination","dataSource","content","renderItem","Item","SearchTool","totalPages","setData","Search","Input","className","placeholder","onSearch","enterButton","style","width","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aa84894.chunk.js","sourcesContent":["/**\r\n * description: 将对象转为query字符串   obj格式:  string:string|number|undefined\r\n */\r\n\r\nconst pickQuery = (obj) => {\r\n    let queryArray = [];\r\n    for(const key of Object.keys(obj)){\r\n        const value = obj[key];\r\n        if(value !== undefined){\r\n            queryArray.push(`${key}=${value}`);\r\n        }\r\n    }\r\n    const queryString = queryArray.length === 0 ? '' : encodeURI(\"?\"+queryArray.join(\"&\"));\r\n    return queryString;\r\n};\r\n\r\nexport default pickQuery;","import pickQuery from \"./pick-query\"; // eslint-disable-next-line\r\n\r\nconst JsonFetch = {\r\n    get: (url,query = {}) => {\r\n        return new Promise((resolve,reject) => {\r\n            fetch(url + pickQuery(query),{\r\n                method:\"GET\",\r\n            }).then(res =>{\r\n                return res.json();\r\n            }).then(data =>{\r\n                resolve(data);\r\n            }).catch(error =>{\r\n                reject(error);\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default JsonFetch;","import JsonFetch from \"../utils/json-fetch\";\r\n\r\n let result = {\r\n    // 请求数据\r\n    getSearchData: async function(value){\r\n        const getSearchData = await JsonFetch.get(\"http://localhost//search?query=\" + value);\r\n        console.log('2');\r\n    return getSearchData;\r\n    },\r\n}\r\n\r\nexport default result;","import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { List, Typography, Pagination, Space, Button } from 'antd';\r\nimport { StarOutlined, WechatOutlined } from '@ant-design/icons';\r\n\r\nfunction LtItem(props) {\r\n  const { Text, Link } = Typography;\r\n  return (\r\n  <Space direction=\"vertical\">\r\n      <Link href=\"/lq-detail\" target=\"_blank\">{props.item.ltName}</Link>\r\n      <Space >\r\n        <Text type=\"secondary\">发布时间</Text>\r\n        <Text type=\"secondary\">发刊的期刊来源</Text>\r\n        <Text>DOI</Text>\r\n      </Space>\r\n      <Text>作者1，作者2</Text>\r\n      <Text>{props.item.desc}</Text>\r\n      <Space>\r\n        <Text>阅读数量: {0}</Text>\r\n        <Text>推荐数量: {0}</Text>\r\n        <Text>成熟度</Text>\r\n        <Button icon={<StarOutlined/>}>收藏</Button>\r\n        <Button icon={<WechatOutlined/>}>微信分享</Button>\r\n      </Space>\r\n  </Space>);\r\n}\r\n\r\nfunction LtList(props) {\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const paginationData = { hideOnSinglePage: true, defaultPageSize:2, total:props.data.totalElements }\r\n  const onChange = function(value) {\r\n    console.log(value)\r\n  }\r\n\r\n    return (\r\n    <>\r\n        <List\r\n          pagination={ paginationData }\r\n          dataSource={props.data.content}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <LtItem item = {item}/>\r\n            </List.Item>\r\n          )}\r\n        />,\r\n    </>\r\n    );\r\n}\r\n\r\nexport default LtList;","import React, { useState } from 'react';\r\nimport { Button, Input, Space } from 'antd';\r\nimport result from \"./web-api/get-search-data\";\r\n\r\nimport LtList from './lt-list';\r\n\r\nimport './search-tool.css';\r\n\r\nfunction SearchTool() {\r\n    const [data, setData] = useState({content: [], totalPages: 0});\r\n    const { Search } = Input;\r\n\r\n    const getSearchData = async function(value){\r\n        const data = await result.getSearchData(value);\r\n        setData(data);\r\n    } \r\n    \r\n    return (\r\n        <div className=\"srearch-tool\">\r\n            <Space direction=\"vertical\">\r\n                <Search placeholder=\"输入搜索的内容\" onSearch={getSearchData} enterButton style={{ width: 600 }}/>\r\n                <Space>\r\n                    <Button type=\"primary\">文献/出版物</Button>\r\n                    <Button type=\"primary\">作者</Button>\r\n                    <Button type=\"primary\">机构</Button>\r\n                    <Button type=\"primary\">问题</Button>\r\n                    <Button type=\"primary\">方法/成果</Button>\r\n                </Space>\r\n                <LtList data={data}/>\r\n            </Space>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default SearchTool;\r\n\r\n","import React from 'react';\r\nimport SearchTool from './search-tool';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"app-searh\">\r\n          <SearchTool />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n// import LtDetail from './lt-detail';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <Router>\r\n      <Switch>\r\n        <Route path='/' exact component={App}/>\r\n        <Route path='/lt-detail' component={LtDetail} />\r\n      </Switch>\r\n    </Router> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}